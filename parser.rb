#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require './node.rb'
  require './lexer.rb'
  programBlock = NBlock.new

class Kona < Racc::Parser

module_eval(<<'...end kona.y/module_eval...', 'kona.y', 30)
  def parse(input)
    scan_str(input)
  end
...end kona.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    16,    17,    19,    21,    23,    26,    16,    17,    19,    21,
    23,    26,    33,    18,    20,    22,    25,    13,    28,    18,
    20,    22,    25,    16,    17,    19,    21,    23,    26,    16,
    17,    19,    21,    23,    26,    27,    18,    20,    22,    25,
   nil,   nil,    18,    20,    22,    25,     2,     4,     7,     2,
     4,     7,     2,     4,     7,     2,     4,     7,     5,    29,
   nil,     5,   nil,   nil,     5,   nil,   nil,     5,     2,     4,
     7,     2,     4,     7,     2,     4,     7 ]

racc_action_check = [
    34,    34,    34,    34,    34,    34,    32,    32,    32,    32,
    32,    32,    31,    34,    34,    34,    34,     1,    13,    32,
    32,    32,    32,    30,    30,    30,    30,    30,    30,     9,
     9,     9,     9,     9,     9,    11,    30,    30,    30,    30,
   nil,   nil,     9,     9,     9,     9,    15,    15,    15,     0,
     0,     0,     5,     5,     5,     3,     3,     3,    15,    15,
   nil,     0,   nil,   nil,     5,   nil,   nil,     3,    24,    24,
    24,    27,    27,    27,    33,    33,    33 ]

racc_action_pointer = [
    47,    17,   nil,    53,   nil,    50,   nil,   nil,   nil,    24,
   nil,    24,   nil,    18,   nil,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    66,   nil,   nil,    69,   nil,   nil,
    18,     1,     1,    72,    -5 ]

racc_action_default = [
   -26,   -26,    -9,    -1,   -11,   -26,    -2,   -10,    -4,    -5,
    -6,   -14,   -13,   -26,    -3,   -26,   -16,   -17,   -22,   -18,
   -23,   -19,   -24,   -20,   -26,   -25,   -21,   -26,    35,    -7,
   -15,   -14,    -8,   -26,   -12 ]

racc_goto_table = [
    14,    30,    31,     3,    32,    31,     1,   nil,    15,   nil,
    34,    31,    14 ]

racc_goto_check = [
     3,     5,     7,     2,     5,     7,     1,   nil,     2,   nil,
     5,     7,     3 ]

racc_goto_pointer = [
   nil,     6,     3,    -3,   nil,   -23,   nil,   -22,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     6,     8,     9,    10,    11,    12,    24 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 23, :_reduce_1,
  1, 24, :_reduce_2,
  2, 24, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  3, 28, :_reduce_7,
  3, 26, :_reduce_8,
  1, 29, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  3, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  3, 27, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none ]

racc_reduce_n = 26

racc_shift_n = 35

racc_token_table = {
  false => 0,
  :error => 1,
  :TIDENTIFIER => 2,
  :TDOUBLE => 3,
  :TINTEGER => 4,
  :TCEQ => 5,
  :TCNE => 6,
  :TCLT => 7,
  :TCLE => 8,
  :TCGT => 9,
  :TCGE => 10,
  :TEQUAL => 11,
  :TLPAREN => 12,
  :TRPAREN => 13,
  :TLBRACE => 14,
  :TRBRACE => 15,
  :TCOMMA => 16,
  :TDOT => 17,
  :TPLUS => 18,
  :TMINUS => 19,
  :TMUL => 20,
  :TDIV => 21 }

racc_nt_base = 22

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TIDENTIFIER",
  "TDOUBLE",
  "TINTEGER",
  "TCEQ",
  "TCNE",
  "TCLT",
  "TCLE",
  "TCGT",
  "TCGE",
  "TEQUAL",
  "TLPAREN",
  "TRPAREN",
  "TLBRACE",
  "TRBRACE",
  "TCOMMA",
  "TDOT",
  "TPLUS",
  "TMINUS",
  "TMUL",
  "TDIV",
  "$start",
  "program",
  "stmts",
  "stmt",
  "var_decl",
  "expr",
  "block",
  "ident",
  "numeric",
  "comparison" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'kona.y', 8)
  def _reduce_1(val, _values, result)
    programBlock = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'kona.y', 9)
  def _reduce_2(val, _values, result)
    result = NBlock.new
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'kona.y', 11)
  def _reduce_7(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'kona.y', 12)
  def _reduce_8(val, _values, result)
    
    result
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Kona
