#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require './lib/lexer'
  require './lib/ast'


module Koona
  class Parser < Racc::Parser

module_eval(<<'...end koona.y/module_eval...', 'koona.y', 58)
  def on_error(tok, val, vstack)
    $stderr.puts "Parse error on value: \"#{val.to_s}\"", "Stack: #{vstack.inspect}"
  end
  def parse(tokens)
    @tokens = tokens
    do_parse
  end

  def next_token
    @tokens.shift
  end
...end koona.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    10,    12,    11,    10,    12,    11,    10,    12,    11,    10,
    15,    51,     8,    15,    52,    10,    15,    10,     8,    49,
    13,    37,    50,    13,    32,    33,    13,    10,    12,    11,
    10,    12,    11,     8,    10,    12,    11,    15,    40,    41,
    15,    10,     8,    30,    15,    32,    33,    13,    16,    10,
    13,    10,    12,    11,    13,    10,    12,    11,    10,    12,
    11,    15,   nil,   nil,   nil,    15,   nil,   nil,    15,   nil,
   nil,    13,    10,    12,    11,    13,   nil,   nil,    13,    10,
    12,    11,    15,   nil,     8,    39,   nil,   nil,   nil,    15,
   nil,   nil,    13,    19,    20,    21,    22,    23,    24,    13,
    19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
   nil,   nil,   nil,    25,    26,    27,    28,    19,    20,    21,
    22,    23,    24,    19,    20,    21,    22,    23,    24,   nil,
    25,    26,    27,    28,   nil,   nil,    25,    26,    27,    28,
    19,    20,    21,    22,    23,    24,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    25,    26,    27,    28,    19,    20,    21,
    22,    23,    24,   nil,   nil,    45,   nil,   nil,   nil,   nil,
    25,    26,    27,    28,    19,    20,    21,    22,    23,    24,
    19,    20,    21,    22,    23,    24,   nil,    25,    26,    27,
    28,   nil,   nil,    25,    26,    27,    28 ]

racc_action_check = [
     0,     0,     0,    33,    33,    33,     2,     2,     2,    41,
     0,    47,     0,    33,    47,     9,     2,    48,     2,    43,
     0,    16,    43,    33,     9,     9,     2,    32,    32,    32,
     8,     8,     8,    51,    40,    40,    40,    32,    31,    31,
     8,    52,     8,     8,    40,    35,    35,    32,     1,    56,
     8,    13,    13,    13,    40,    15,    15,    15,    50,    50,
    50,    13,   nil,   nil,   nil,    15,   nil,   nil,    50,   nil,
   nil,    13,    29,    29,    29,    15,   nil,   nil,    50,    18,
    18,    18,    29,   nil,    29,    29,   nil,   nil,   nil,    18,
   nil,   nil,    29,    42,    42,    42,    42,    42,    42,    18,
     4,     4,     4,     4,     4,     4,    42,    42,    42,    42,
   nil,   nil,   nil,     4,     4,     4,     4,    54,    54,    54,
    54,    54,    54,    34,    34,    34,    34,    34,    34,   nil,
    54,    54,    54,    54,   nil,   nil,    34,    34,    34,    34,
    46,    46,    46,    46,    46,    46,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    46,    46,    46,    46,    36,    36,    36,
    36,    36,    36,   nil,   nil,    36,   nil,   nil,   nil,   nil,
    36,    36,    36,    36,    38,    38,    38,    38,    38,    38,
    44,    44,    44,    44,    44,    44,   nil,    38,    38,    38,
    38,   nil,   nil,    44,    44,    44,    44 ]

racc_action_pointer = [
    -2,    48,     4,   nil,    95,   nil,   nil,   nil,    28,    13,
   nil,   nil,   nil,    49,   nil,    53,    21,   nil,    77,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    70,
   nil,    27,    25,     1,   118,    34,   152,   nil,   169,   nil,
    32,     7,    88,     6,   175,   nil,   135,    -2,    15,   nil,
    56,    19,    39,   nil,   112,   nil,    47,   nil ]

racc_action_default = [
   -38,   -38,    -1,    -2,    -4,    -5,    -6,    -7,   -38,   -21,
   -15,   -16,   -17,   -38,   -20,   -38,   -38,    -3,   -38,   -28,
   -29,   -30,   -31,   -32,   -33,   -34,   -35,   -36,   -37,   -38,
    -8,   -38,   -38,   -25,   -18,   -21,   -38,    58,   -23,    -9,
   -38,   -12,   -19,   -38,   -26,   -24,   -10,   -38,   -38,   -22,
   -38,   -38,   -38,   -13,   -27,   -11,   -38,   -14 ]

racc_goto_table = [
     9,    34,     9,    36,    17,     2,    38,    55,     9,    31,
     1,    47,    43,    29,   nil,   nil,   nil,   nil,   nil,   nil,
    42,    44,   nil,   nil,   nil,   nil,   nil,   nil,    46,     9,
   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,    54,   nil,
   nil,    48,   nil,   nil,   nil,   nil,   nil,   nil,    53,   nil,
   nil,   nil,    56,   nil,   nil,   nil,    57 ]

racc_goto_check = [
     8,     4,     8,     4,     3,     2,     4,     5,     8,     8,
     1,     9,    11,     2,   nil,   nil,   nil,   nil,   nil,   nil,
     4,     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,     8,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,
   nil,   nil,     8,   nil,   nil,   nil,     8 ]

racc_goto_pointer = [
   nil,    10,     5,     2,   -12,   -44,   nil,   nil,     0,   -30,
   nil,   -21,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,    35,   nil,
    14,   nil,    18 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 24, :_reduce_1,
  1, 25, :_reduce_2,
  2, 25, :_reduce_3,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  2, 28, :_reduce_8,
  3, 28, :_reduce_9,
  4, 30, :_reduce_10,
  6, 29, :_reduce_11,
  0, 32, :_reduce_12,
  2, 32, :_reduce_13,
  4, 32, :_reduce_14,
  1, 31, :_reduce_15,
  1, 33, :_reduce_16,
  1, 33, :_reduce_17,
  2, 27, :_reduce_18,
  3, 27, :_reduce_19,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  4, 27, :_reduce_22,
  3, 27, :_reduce_23,
  3, 27, :_reduce_24,
  0, 34, :_reduce_25,
  1, 34, :_reduce_26,
  3, 34, :_reduce_27,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none ]

racc_reduce_n = 38

racc_shift_n = 58

racc_token_table = {
  false => 0,
  :error => 1,
  :TIDENTIFIER => 2,
  :TDOUBLE => 3,
  :TINTEGER => 4,
  :TCEQ => 5,
  :TCNE => 6,
  :TCLT => 7,
  :TCLE => 8,
  :TCGT => 9,
  :TCGE => 10,
  :TEQUAL => 11,
  :TLPAREN => 12,
  :TRPAREN => 13,
  :TLBRACE => 14,
  :TRBRACE => 15,
  :TCOMMA => 16,
  :TDOT => 17,
  :TPLUS => 18,
  :TMINUS => 19,
  :TMUL => 20,
  :TDIV => 21,
  :TRETURN => 22 }

racc_nt_base = 23

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TIDENTIFIER",
  "TDOUBLE",
  "TINTEGER",
  "TCEQ",
  "TCNE",
  "TCLT",
  "TCLE",
  "TCGT",
  "TCGE",
  "TEQUAL",
  "TLPAREN",
  "TRPAREN",
  "TLBRACE",
  "TRBRACE",
  "TCOMMA",
  "TDOT",
  "TPLUS",
  "TMINUS",
  "TMUL",
  "TDIV",
  "TRETURN",
  "$start",
  "program",
  "stmts",
  "stmt",
  "expr",
  "block",
  "func_decl",
  "var_decl",
  "ident",
  "func_decl_args",
  "numeric",
  "call_args",
  "comparison" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'koona.y', 9)
  def _reduce_1(val, _values, result)
    result = Koona::AST::NBlock.new; result.statements << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 10)
  def _reduce_2(val, _values, result)
    result = Koona::AST::NBlock.new; result.statements << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 11)
  def _reduce_3(val, _values, result)
    val[0].statments << val[1]
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'koona.y', 18)
  def _reduce_8(val, _values, result)
    result = Koona::AST::NBlock.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 19)
  def _reduce_9(val, _values, result)
    result = Koona::AST::NBlock.new << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 21)
  def _reduce_10(val, _values, result)
    result = Koona::AST::NVariableDeclaration.new(val[0], val[1], val[3], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 24)
  def _reduce_11(val, _values, result)
    result = Koona::AST::NFunctionDeclaration.new(val[0], val[1], val[3], val[5], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 26)
  def _reduce_12(val, _values, result)
    result = Koona::AST::VariableList.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 27)
  def _reduce_13(val, _values, result)
    result = Koona::AST::VariableList.new; result.variables << Koona::AST::FunctionVar.new(val[0], val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 28)
  def _reduce_14(val, _values, result)
    val[0].variables << Koona::AST::FunctionVar.new(val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 30)
  def _reduce_15(val, _values, result)
    result = Koona::AST::NIdentifier.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 32)
  def _reduce_16(val, _values, result)
    result = Koona::AST::NInteger.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 33)
  def _reduce_17(val, _values, result)
    result = Koona::AST::NFloat.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 35)
  def _reduce_18(val, _values, result)
    result = Koona::AST::NReturn.new(val[1], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 36)
  def _reduce_19(val, _values, result)
    result = Koona::AST::NVariableAssignment.new(val[0], val[2], val[0])
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'koona.y', 39)
  def _reduce_22(val, _values, result)
    result = Koona::AST::NFunctionCall.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 40)
  def _reduce_23(val, _values, result)
    result = Koona::AST::NBinaryOperator.new(val[0], val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 41)
  def _reduce_24(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 43)
  def _reduce_25(val, _values, result)
    result = Koona::AST::VariableList.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 44)
  def _reduce_26(val, _values, result)
    result = Koona::AST::VariableList.new; result.variables << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 45)
  def _reduce_27(val, _values, result)
    val[0].variables << val[2]
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Koona
