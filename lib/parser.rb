#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require './lib/lexer'
  require './lib/ast'


module Koona
  class Parser < Racc::Parser

module_eval(<<'...end koona.y/module_eval...', 'koona.y', 61)
  def on_error(tok, val, vstack)
    $stderr.puts "Parse error on value: \"#{val.to_s}\"", "Stack: #{vstack.inspect}"
  end
  def parse(tokens)
    @tokens = tokens
    do_parse
  end

  def next_token
    @tokens.shift
  end
...end koona.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    15,    14,    13,    15,    14,    35,    13,    15,    14,
    17,    53,    10,    17,    54,    10,    32,    17,    13,    10,
    12,    13,    13,    12,    13,    15,    14,    12,    39,    51,
    34,    35,    52,    10,    17,    13,    10,    41,    21,    22,
    23,    24,    25,    26,    12,    21,    22,    23,    24,    25,
    26,    27,    28,    29,    30,    42,    43,    18,    27,    28,
    29,    30,    21,    22,    23,    24,    25,    26,    21,    22,
    23,    24,    25,    26,    13,    27,    28,    29,    30,   nil,
   nil,    27,    28,    29,    30,    21,    22,    23,    24,    25,
    26,   nil,   nil,    47,   nil,   nil,   nil,   nil,    27,    28,
    29,    30,    21,    22,    23,    24,    25,    26,    21,    22,
    23,    24,    25,    26,   nil,    27,    28,    29,    30,   nil,
   nil,    27,    28,    29,    30,    21,    22,    23,    24,    25,
    26,   nil,    13,    15,    14,    13,    15,    14,    27,    28,
    29,    30,    17,   nil,   nil,    17,    13,    15,    14,    13,
    15,    14,    13,    15,    14,   nil,    17,   nil,   nil,    17,
   nil,   nil,    17,    13,    15,    14,    13,    15,    14,   nil,
   nil,   nil,   nil,    17,   nil,   nil,    17 ]

racc_action_check = [
     0,     0,     0,    10,    10,    10,    37,     2,     2,     2,
     0,    49,     0,    10,    49,    10,    10,     2,    43,     2,
     0,    11,    50,    10,    31,    31,    31,     2,    18,    45,
    11,    11,    45,    53,    31,    54,    31,    31,     5,     5,
     5,     5,     5,     5,    31,    56,    56,    56,    56,    56,
    56,     5,     5,     5,     5,    33,    33,     1,    56,    56,
    56,    56,    48,    48,    48,    48,    48,    48,    40,    40,
    40,    40,    40,    40,    58,    48,    48,    48,    48,   nil,
   nil,    40,    40,    40,    40,    38,    38,    38,    38,    38,
    38,   nil,   nil,    38,   nil,   nil,   nil,   nil,    38,    38,
    38,    38,    36,    36,    36,    36,    36,    36,    44,    44,
    44,    44,    44,    44,   nil,    36,    36,    36,    36,   nil,
   nil,    44,    44,    44,    44,    46,    46,    46,    46,    46,
    46,   nil,    34,    34,    34,    35,    35,    35,    46,    46,
    46,    46,    34,   nil,   nil,    35,    20,    20,    20,    52,
    52,    52,    12,    12,    12,   nil,    20,   nil,   nil,    52,
   nil,   nil,    12,    42,    42,    42,    17,    17,    17,   nil,
   nil,   nil,   nil,    42,   nil,   nil,    17 ]

racc_action_pointer = [
    -2,    57,     5,   nil,   nil,    33,   nil,   nil,   nil,   nil,
     1,    19,   150,   nil,   nil,   nil,   nil,   164,    28,   nil,
   144,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,    44,   130,   133,    97,    -6,    80,   nil,
    63,   nil,   161,    16,   103,    16,   120,   nil,    57,    -2,
    20,   nil,   147,    19,    33,   nil,    40,   nil,    72,   nil ]

racc_action_default = [
   -41,   -41,    -1,    -2,    -4,    -5,    -6,    -7,    -8,    -9,
   -41,   -24,   -18,   -20,   -21,   -22,   -23,   -41,   -41,    -3,
   -41,   -31,   -32,   -33,   -34,   -35,   -36,   -37,   -38,   -39,
   -40,   -41,   -10,   -41,   -41,   -28,   -19,   -24,   -41,    60,
   -26,   -11,   -41,   -15,   -13,   -41,   -29,   -27,   -12,   -41,
   -41,   -25,   -41,   -41,   -41,   -16,   -30,   -14,   -41,   -17 ]

racc_goto_table = [
    11,    19,    11,     2,    36,    57,     1,    49,    45,    38,
    11,    33,    40,    31,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    44,    46,   nil,   nil,
    19,    11,   nil,   nil,    48,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    50,    56,   nil,   nil,   nil,   nil,   nil,
    55,   nil,   nil,   nil,    58,   nil,   nil,   nil,    59 ]

racc_goto_check = [
    10,     3,    10,     2,     5,     6,     1,    11,    13,     5,
    10,    10,     5,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,   nil,   nil,
     3,    10,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    10,     5,   nil,   nil,   nil,   nil,   nil,
    10,   nil,   nil,   nil,    10,   nil,   nil,   nil,    10 ]

racc_goto_pointer = [
   nil,     6,     3,    -1,   nil,    -8,   -48,   nil,   nil,   nil,
     0,   -36,   nil,   -27,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    37,   nil,    16,   nil,    20 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 24, :_reduce_1,
  1, 25, :_reduce_2,
  2, 25, :_reduce_3,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  2, 29, :_reduce_10,
  3, 29, :_reduce_11,
  4, 31, :_reduce_12,
  3, 32, :_reduce_13,
  6, 30, :_reduce_14,
  0, 34, :_reduce_15,
  2, 34, :_reduce_16,
  4, 34, :_reduce_17,
  1, 27, :_reduce_18,
  2, 27, :_reduce_19,
  1, 33, :_reduce_20,
  1, 35, :_reduce_21,
  1, 35, :_reduce_22,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  4, 28, :_reduce_25,
  3, 28, :_reduce_26,
  3, 28, :_reduce_27,
  0, 36, :_reduce_28,
  1, 36, :_reduce_29,
  3, 36, :_reduce_30,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none ]

racc_reduce_n = 41

racc_shift_n = 60

racc_token_table = {
  false => 0,
  :error => 1,
  :TIDENTIFIER => 2,
  :TDOUBLE => 3,
  :TINTEGER => 4,
  :TCEQ => 5,
  :TCNE => 6,
  :TCLT => 7,
  :TCLE => 8,
  :TCGT => 9,
  :TCGE => 10,
  :TEQUAL => 11,
  :TLPAREN => 12,
  :TRPAREN => 13,
  :TLBRACE => 14,
  :TRBRACE => 15,
  :TCOMMA => 16,
  :TDOT => 17,
  :TPLUS => 18,
  :TMINUS => 19,
  :TMUL => 20,
  :TDIV => 21,
  :TRETURN => 22 }

racc_nt_base = 23

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TIDENTIFIER",
  "TDOUBLE",
  "TINTEGER",
  "TCEQ",
  "TCNE",
  "TCLT",
  "TCLE",
  "TCGT",
  "TCGE",
  "TEQUAL",
  "TLPAREN",
  "TRPAREN",
  "TLBRACE",
  "TRBRACE",
  "TCOMMA",
  "TDOT",
  "TPLUS",
  "TMINUS",
  "TMUL",
  "TDIV",
  "TRETURN",
  "$start",
  "program",
  "stmts",
  "stmt",
  "return_stmt",
  "expr",
  "block",
  "func_decl",
  "var_decl",
  "var_assign",
  "ident",
  "func_decl_args",
  "numeric",
  "call_args",
  "binop" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'koona.y', 9)
  def _reduce_1(val, _values, result)
    result = Koona::AST::NBlock.new(Koona::AST::NStatementList.new); result.statementlist.statements << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 10)
  def _reduce_2(val, _values, result)
    result = Koona::AST::NStatementList.new; result.statements << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 11)
  def _reduce_3(val, _values, result)
    val[0].statements << val[1]
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'koona.y', 20)
  def _reduce_10(val, _values, result)
    result = Koona::AST::NBlock.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 21)
  def _reduce_11(val, _values, result)
    result = Koona::AST::NBlock.new(Koona::AST::NStatementList.new); result.statementlist.statements << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 23)
  def _reduce_12(val, _values, result)
    result = Koona::AST::NVariableDeclaration.new(val[0], val[1], val[3], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 24)
  def _reduce_13(val, _values, result)
    result = Koona::AST::NVariableAssignment.new(val[0], val[2], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 27)
  def _reduce_14(val, _values, result)
    result = Koona::AST::NFunctionDeclaration.new(val[0], val[1], val[3], val[5], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 29)
  def _reduce_15(val, _values, result)
    result = Koona::AST::VariableList.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 30)
  def _reduce_16(val, _values, result)
    result = Koona::AST::VariableList.new; result.variables << Koona::AST::FunctionVar.new(val[0], val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 31)
  def _reduce_17(val, _values, result)
    val[0].variables << Koona::AST::FunctionVar.new(val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 32)
  def _reduce_18(val, _values, result)
    result = Koona::AST::NReturn.new(val[0], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 33)
  def _reduce_19(val, _values, result)
    result = Koona::AST::NReturn.new(val[0], val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 35)
  def _reduce_20(val, _values, result)
    result = Koona::AST::NIdentifier.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 37)
  def _reduce_21(val, _values, result)
    result = Koona::AST::NInteger.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 38)
  def _reduce_22(val, _values, result)
    result = Koona::AST::NFloat.new(val[0])
    result
  end
.,.,

# reduce 23 omitted

# reduce 24 omitted

module_eval(<<'.,.,', 'koona.y', 42)
  def _reduce_25(val, _values, result)
    result = Koona::AST::NFunctionCall.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 43)
  def _reduce_26(val, _values, result)
    result = Koona::AST::NBinaryOperator.new(val[0], val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 44)
  def _reduce_27(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 46)
  def _reduce_28(val, _values, result)
    result = Koona::AST::VariableList.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 47)
  def _reduce_29(val, _values, result)
    result = Koona::AST::VariableList.new; result.variables << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 48)
  def _reduce_30(val, _values, result)
    val[0].variables << val[2]
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Koona
