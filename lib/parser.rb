#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require './lib/node.rb'
  require './lib/lexer.rb'


class Koona < Racc::Parser

module_eval(<<'...end koona.y/module_eval...', 'koona.y', 48)
  def on_error(tok, val, vstack)
    $stderr.puts "Parse error on value: \"#{val.to_s}\"", "Stack: #{vstack.inspect}"
  end
...end koona.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     6,     9,     4,     6,     9,     4,     6,     9,    38,
     3,    46,     7,     3,    47,     4,     3,     4,     6,     9,
     2,    44,    45,     2,    34,    35,     2,     3,     4,     6,
     9,     4,     4,     6,     9,     4,    53,     2,     3,    54,
     7,    21,     3,    19,     7,     4,     6,     9,     2,     4,
     6,     9,     2,    34,    35,     3,     4,     6,     9,     3,
     7,     7,    39,     4,     4,     2,     3,   nil,   nil,     2,
     4,     6,     9,     4,     6,     9,     2,   nil,   nil,   nil,
     3,   nil,   nil,     3,    24,    25,    27,    29,    31,    33,
     2,   nil,   nil,     2,   nil,   nil,   nil,    26,    28,    30,
    32,    24,    25,    27,    29,    31,    33,   nil,   nil,    37,
   nil,   nil,   nil,   nil,    26,    28,    30,    32,    24,    25,
    27,    29,    31,    33,    24,    25,    27,    29,    31,    33,
   nil,    26,    28,    30,    32,   nil,   nil,    26,    28,    30,
    32,    24,    25,    27,    29,    31,    33,    24,    25,    27,
    29,    31,    33,   nil,    26,    28,    30,    32,   nil,   nil,
    26,    28,    30,    32,    24,    25,    27,    29,    31,    33,
    24,    25,    27,    29,    31,    33,   nil,    26,    28,    30,
    32,   nil,   nil,    26,    28,    30,    32 ]

racc_action_check = [
     0,     0,     0,     2,     2,     2,     3,     3,     3,    19,
     0,    42,     0,     2,    42,    15,     3,    47,    47,    47,
     0,    36,    36,     2,    15,    15,     3,    47,     7,     7,
     7,    49,     8,     8,     8,    45,    50,    47,     7,    50,
     7,     7,     8,     5,     8,    44,    44,    44,     7,    20,
    20,    20,     8,    17,    17,    44,    34,    34,    34,    20,
    53,    20,    20,    54,    56,    44,    34,   nil,   nil,    20,
    23,    23,    23,    35,    35,    35,    34,   nil,   nil,   nil,
    23,   nil,   nil,    35,    11,    11,    11,    11,    11,    11,
    23,   nil,   nil,    35,   nil,   nil,   nil,    11,    11,    11,
    11,    18,    18,    18,    18,    18,    18,   nil,   nil,    18,
   nil,   nil,   nil,   nil,    18,    18,    18,    18,    48,    48,
    48,    48,    48,    48,    16,    16,    16,    16,    16,    16,
   nil,    48,    48,    48,    48,   nil,   nil,    16,    16,    16,
    16,    51,    51,    51,    51,    51,    51,    43,    43,    43,
    43,    43,    43,   nil,    51,    51,    51,    51,   nil,   nil,
    43,    43,    43,    43,    41,    41,    41,    41,    41,    41,
    40,    40,    40,    40,    40,    40,   nil,    41,    41,    41,
    41,   nil,   nil,    40,    40,    40,    40 ]

racc_action_pointer = [
    -2,   nil,     1,     4,   nil,    43,   nil,    26,    30,   nil,
   nil,    79,   nil,   nil,   nil,    13,   119,    42,    96,     9,
    47,   nil,   nil,    68,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    54,    71,    10,   nil,   nil,   nil,
   165,   159,    -2,   142,    43,    33,   nil,    15,   113,    29,
    23,   136,   nil,    46,    61,   nil,    62,   nil ]

racc_action_default = [
   -38,   -20,   -38,   -38,   -15,   -38,   -17,   -38,    -1,   -16,
    -2,    -4,    -5,    -6,    -7,   -21,   -18,   -21,   -38,   -38,
   -38,    -8,    -3,   -38,   -28,   -29,   -34,   -30,   -35,   -31,
   -36,   -32,   -37,   -33,   -38,   -25,   -38,   -24,    58,    -9,
   -23,   -19,   -38,   -26,   -38,   -12,   -22,   -38,   -10,   -38,
   -38,   -27,   -13,   -38,   -38,   -11,   -38,   -14 ]

racc_goto_table = [
    15,    16,    18,     8,    22,    55,     5,    15,    15,    50,
    20,    42,   nil,   nil,   nil,    36,    22,   nil,   nil,   nil,
    15,   nil,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    41,    43,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    48,   nil,    49,    51,   nil,   nil,    52,
   nil,   nil,   nil,   nil,    56,   nil,    57 ]

racc_goto_check = [
     8,     4,     4,     2,     3,     5,     1,     8,     8,     9,
     2,    11,   nil,   nil,   nil,     8,     3,   nil,   nil,   nil,
     8,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,     8,     4,   nil,   nil,     8,
   nil,   nil,   nil,   nil,     8,   nil,     8 ]

racc_goto_pointer = [
   nil,     6,     3,    -4,    -1,   -48,   nil,   nil,     0,   -36,
   nil,   -24,   nil ]

racc_goto_default = [
   nil,   nil,   nil,    10,    11,    12,    13,    14,    17,   nil,
     1,   nil,    23 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 24, :_reduce_1,
  1, 25, :_reduce_2,
  2, 25, :_reduce_3,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  2, 28, :_reduce_8,
  3, 28, :_reduce_9,
  4, 30, :_reduce_10,
  6, 29, :_reduce_11,
  0, 32, :_reduce_12,
  2, 32, :_reduce_13,
  4, 32, :_reduce_14,
  1, 31, :_reduce_15,
  1, 33, :_reduce_16,
  1, 33, :_reduce_17,
  2, 27, :_reduce_18,
  3, 27, :_reduce_19,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  4, 27, :_reduce_22,
  3, 27, :_reduce_23,
  3, 27, :_reduce_24,
  0, 34, :_reduce_25,
  1, 34, :_reduce_26,
  3, 34, :_reduce_27,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none ]

racc_reduce_n = 38

racc_shift_n = 58

racc_token_table = {
  false => 0,
  :error => 1,
  :TIDENTIFIER => 2,
  :TDOUBLE => 3,
  :TINTEGER => 4,
  :TCEQ => 5,
  :TCNE => 6,
  :TCLT => 7,
  :TCLE => 8,
  :TCGT => 9,
  :TCGE => 10,
  :TEQUAL => 11,
  :TLPAREN => 12,
  :TRPAREN => 13,
  :TLBRACE => 14,
  :TRBRACE => 15,
  :TCOMMA => 16,
  :TDOT => 17,
  :TPLUS => 18,
  :TMINUS => 19,
  :TMUL => 20,
  :TDIV => 21,
  :TRETURN => 22 }

racc_nt_base = 23

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TIDENTIFIER",
  "TDOUBLE",
  "TINTEGER",
  "TCEQ",
  "TCNE",
  "TCLT",
  "TCLE",
  "TCGT",
  "TCGE",
  "TEQUAL",
  "TLPAREN",
  "TRPAREN",
  "TLBRACE",
  "TRBRACE",
  "TCOMMA",
  "TDOT",
  "TPLUS",
  "TMINUS",
  "TMUL",
  "TDIV",
  "TRETURN",
  "$start",
  "program",
  "stmts",
  "stmt",
  "expr",
  "block",
  "func_decl",
  "var_decl",
  "ident",
  "func_decl_args",
  "numeric",
  "call_args",
  "comparison" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'koona.y', 9)
  def _reduce_1(val, _values, result)
    programBlock = NBlock.new; programBlock.statements << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 10)
  def _reduce_2(val, _values, result)
    result = NBlock.new; result.statements << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 11)
  def _reduce_3(val, _values, result)
    val[0].statements << val[1]
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'koona.y', 16)
  def _reduce_8(val, _values, result)
    result = NBlock.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 17)
  def _reduce_9(val, _values, result)
    result = NBlock.new; result.statements << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 18)
  def _reduce_10(val, _values, result)
    result = NVariableDeclaration.new(val[0], val[1], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 20)
  def _reduce_11(val, _values, result)
     result = NFunctionDeclaration.new(val[0], val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 21)
  def _reduce_12(val, _values, result)
    VariableList.new([])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 22)
  def _reduce_13(val, _values, result)
    result = VariableList.new; result.variables << FunctionVar.new(val[0], val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 23)
  def _reduce_14(val, _values, result)
    val[0].variables << FunctionVar.new(val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 24)
  def _reduce_15(val, _values, result)
    result = NIdentifier.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 25)
  def _reduce_16(val, _values, result)
    result = NInteger.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 26)
  def _reduce_17(val, _values, result)
    result = NFloat.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 27)
  def _reduce_18(val, _values, result)
    result = NReturn.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 28)
  def _reduce_19(val, _values, result)
    result = NVariableAssignment.new(val[0], val[2])
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'koona.y', 31)
  def _reduce_22(val, _values, result)
    result = NFunctionCall.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 32)
  def _reduce_23(val, _values, result)
    result = NBinaryOperator.new(val[0], val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 33)
  def _reduce_24(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 34)
  def _reduce_25(val, _values, result)
    result = VariableList.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 35)
  def _reduce_26(val, _values, result)
    result = VariableList.new; result.variables << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 36)
  def _reduce_27(val, _values, result)
    val[0].variables << val[2]
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Koona
