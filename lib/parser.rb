#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require './lib/lexer'
  require './lib/ast'


module Koona
  class Parser < Racc::Parser

module_eval(<<'...end koona.y/module_eval...', 'koona.y', 60)
  def on_error(tok, val, vstack)
    $stderr.puts "Parse error on value: \"#{val.to_s}\"", "Stack: #{vstack.inspect}"
  end
  def parse(tokens)
    @tokens = tokens
    do_parse
  end

  def next_token
    @tokens.shift
  end
...end koona.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    12,    14,    13,    12,    14,    13,    12,    12,    14,    13,
    16,    52,     9,    16,    53,     9,    31,    16,    12,     9,
    11,    12,    38,    11,    12,    14,    13,    11,     9,    50,
    33,    34,    51,    12,    16,    17,     9,    40,    20,    21,
    22,    23,    24,    25,    11,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    29,    41,    42,    12,    26,    27,
    28,    29,    20,    21,    22,    23,    24,    25,    33,    34,
   nil,   nil,   nil,   nil,   nil,    26,    27,    28,    29,    20,
    21,    22,    23,    24,    25,   nil,   nil,    46,   nil,   nil,
   nil,   nil,    26,    27,    28,    29,    20,    21,    22,    23,
    24,    25,    20,    21,    22,    23,    24,    25,   nil,    26,
    27,    28,    29,   nil,   nil,    26,    27,    28,    29,    20,
    21,    22,    23,    24,    25,    20,    21,    22,    23,    24,
    25,   nil,    26,    27,    28,    29,   nil,   nil,    26,    27,
    28,    29,    12,    14,    13,    12,    14,    13,    12,    14,
    13,   nil,    16,   nil,   nil,    16,   nil,   nil,    16,    12,
    14,    13,    12,    14,    13,    12,    14,    13,   nil,    16,
   nil,   nil,    16,   nil,   nil,    16,    12,    14,    13,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_action_check = [
     0,     0,     0,     9,     9,     9,    42,     2,     2,     2,
     0,    48,     0,     9,    48,     9,     9,     2,    49,     2,
     0,    10,    17,     9,    30,    30,    30,     2,    52,    44,
    10,    10,    44,    53,    30,     1,    30,    30,     5,     5,
     5,     5,     5,     5,    30,    55,    55,    55,    55,    55,
    55,     5,     5,     5,     5,    32,    32,    57,    55,    55,
    55,    55,    39,    39,    39,    39,    39,    39,    36,    36,
   nil,   nil,   nil,   nil,   nil,    39,    39,    39,    39,    37,
    37,    37,    37,    37,    37,   nil,   nil,    37,   nil,   nil,
   nil,   nil,    37,    37,    37,    37,    47,    47,    47,    47,
    47,    47,    35,    35,    35,    35,    35,    35,   nil,    47,
    47,    47,    47,   nil,   nil,    35,    35,    35,    35,    43,
    43,    43,    43,    43,    43,    45,    45,    45,    45,    45,
    45,   nil,    43,    43,    43,    43,   nil,   nil,    45,    45,
    45,    45,    33,    33,    33,    34,    34,    34,    19,    19,
    19,   nil,    33,   nil,   nil,    34,   nil,   nil,    19,    51,
    51,    51,    16,    16,    16,    41,    41,    41,   nil,    51,
   nil,   nil,    16,   nil,   nil,    41,    11,    11,    11,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    11 ]

racc_action_pointer = [
    -2,    35,     5,   nil,   nil,    33,   nil,   nil,   nil,     1,
    19,   174,   nil,   nil,   nil,   nil,   160,    22,   nil,   146,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,    44,   140,   143,    97,    57,    74,   nil,    57,
   nil,   163,     4,   114,    16,   120,   nil,    91,    -2,    16,
   nil,   157,    14,    31,   nil,    40,   nil,    55,   nil ]

racc_action_default = [
   -40,   -40,    -1,    -2,    -4,    -5,    -6,    -7,    -8,   -40,
   -23,   -16,   -18,   -19,   -20,   -22,   -40,   -40,    -3,   -40,
   -30,   -31,   -32,   -33,   -34,   -35,   -36,   -37,   -38,   -39,
   -40,    -9,   -40,   -40,   -27,   -17,   -23,   -40,    59,   -25,
   -10,   -40,   -13,   -21,   -40,   -28,   -26,   -11,   -40,   -40,
   -24,   -40,   -40,   -40,   -14,   -29,   -12,   -40,   -15 ]

racc_goto_table = [
    10,    18,    10,    35,     2,    56,     1,    48,    37,    10,
    32,    39,    44,    30,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    43,    45,   nil,   nil,    18,
    10,   nil,   nil,    47,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    49,    55,   nil,   nil,   nil,   nil,   nil,    54,
   nil,   nil,   nil,    57,   nil,   nil,   nil,    58 ]

racc_goto_check = [
     9,     3,     9,     5,     2,     6,     1,    10,     5,     9,
     9,     5,    12,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     5,     5,   nil,   nil,     3,
     9,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     9,     5,   nil,   nil,   nil,   nil,   nil,     9,
   nil,   nil,   nil,     9,   nil,   nil,   nil,     9 ]

racc_goto_pointer = [
   nil,     6,     4,    -1,   nil,    -8,   -47,   nil,   nil,     0,
   -35,   nil,   -22,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,    36,
   nil,    15,   nil,    19 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 24, :_reduce_1,
  1, 25, :_reduce_2,
  2, 25, :_reduce_3,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  2, 29, :_reduce_9,
  3, 29, :_reduce_10,
  4, 31, :_reduce_11,
  6, 30, :_reduce_12,
  0, 33, :_reduce_13,
  2, 33, :_reduce_14,
  4, 33, :_reduce_15,
  1, 27, :_reduce_16,
  2, 27, :_reduce_17,
  1, 32, :_reduce_18,
  1, 34, :_reduce_19,
  1, 34, :_reduce_20,
  3, 28, :_reduce_21,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  4, 28, :_reduce_24,
  3, 28, :_reduce_25,
  3, 28, :_reduce_26,
  0, 35, :_reduce_27,
  1, 35, :_reduce_28,
  3, 35, :_reduce_29,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none ]

racc_reduce_n = 40

racc_shift_n = 59

racc_token_table = {
  false => 0,
  :error => 1,
  :TIDENTIFIER => 2,
  :TDOUBLE => 3,
  :TINTEGER => 4,
  :TCEQ => 5,
  :TCNE => 6,
  :TCLT => 7,
  :TCLE => 8,
  :TCGT => 9,
  :TCGE => 10,
  :TEQUAL => 11,
  :TLPAREN => 12,
  :TRPAREN => 13,
  :TLBRACE => 14,
  :TRBRACE => 15,
  :TCOMMA => 16,
  :TDOT => 17,
  :TPLUS => 18,
  :TMINUS => 19,
  :TMUL => 20,
  :TDIV => 21,
  :TRETURN => 22 }

racc_nt_base = 23

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TIDENTIFIER",
  "TDOUBLE",
  "TINTEGER",
  "TCEQ",
  "TCNE",
  "TCLT",
  "TCLE",
  "TCGT",
  "TCGE",
  "TEQUAL",
  "TLPAREN",
  "TRPAREN",
  "TLBRACE",
  "TRBRACE",
  "TCOMMA",
  "TDOT",
  "TPLUS",
  "TMINUS",
  "TMUL",
  "TDIV",
  "TRETURN",
  "$start",
  "program",
  "stmts",
  "stmt",
  "return_stmt",
  "expr",
  "block",
  "func_decl",
  "var_decl",
  "ident",
  "func_decl_args",
  "numeric",
  "call_args",
  "comparison" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'koona.y', 9)
  def _reduce_1(val, _values, result)
    result = Koona::AST::NBlock.new(Koona::AST::NStatementList.new); result.statementlist.statements << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 10)
  def _reduce_2(val, _values, result)
    result = Koona::AST::NStatementList.new; result.statements << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 11)
  def _reduce_3(val, _values, result)
    val[0].statements << val[1]
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'koona.y', 19)
  def _reduce_9(val, _values, result)
    result = Koona::AST::NBlock.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 20)
  def _reduce_10(val, _values, result)
    result = Koona::AST::NBlock.new(Koona::AST::NStatementList.new); result.statementlist.statements << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 22)
  def _reduce_11(val, _values, result)
    result = Koona::AST::NVariableDeclaration.new(val[0], val[1], val[3], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 25)
  def _reduce_12(val, _values, result)
    result = Koona::AST::NFunctionDeclaration.new(val[0], val[1], val[3], val[5], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 27)
  def _reduce_13(val, _values, result)
    result = Koona::AST::VariableList.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 28)
  def _reduce_14(val, _values, result)
    result = Koona::AST::VariableList.new; result.variables << Koona::AST::FunctionVar.new(val[0], val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 29)
  def _reduce_15(val, _values, result)
    val[0].variables << Koona::AST::FunctionVar.new(val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 30)
  def _reduce_16(val, _values, result)
    result = Koona::AST::NReturn.new(val[0], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 31)
  def _reduce_17(val, _values, result)
    result = Koona::AST::NReturn.new(val[0], val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 33)
  def _reduce_18(val, _values, result)
    result = Koona::AST::NIdentifier.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 35)
  def _reduce_19(val, _values, result)
    result = Koona::AST::NInteger.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 36)
  def _reduce_20(val, _values, result)
    result = Koona::AST::NFloat.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 38)
  def _reduce_21(val, _values, result)
    result = Koona::AST::NVariableAssignment.new(val[0], val[2], val[0])
    result
  end
.,.,

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'koona.y', 41)
  def _reduce_24(val, _values, result)
    result = Koona::AST::NFunctionCall.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 42)
  def _reduce_25(val, _values, result)
    result = Koona::AST::NBinaryOperator.new(val[0], val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 43)
  def _reduce_26(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 45)
  def _reduce_27(val, _values, result)
    result = Koona::AST::VariableList.new
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 46)
  def _reduce_28(val, _values, result)
    result = Koona::AST::VariableList.new; result.variables << val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'koona.y', 47)
  def _reduce_29(val, _values, result)
    val[0].variables << val[2]
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Koona
